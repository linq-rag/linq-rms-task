services:
  postgres-db:
    image: postgres:16-alpine
    container_name: linq-rms-pg
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./pg-volume/pgdata:/var/lib/postgresql/data
      - ./pg-volume/sql/:/docker-entrypoint-initdb.d/

  opensearch-db:
    image: opensearchproject/opensearch:2.17.1
    container_name: linq-rms-os
    entrypoint:
      - sh
      - -c
      - |
        if [ ! -d /usr/share/opensearch/plugins/analysis-icu ]; then
          echo "Installing ICU pluginâ€¦"
          /usr/share/opensearch/bin/opensearch-plugin install --batch analysis-icu
        fi
        # now hand off to the real OpenSearch startup script:
        exec /usr/share/opensearch/opensearch-docker-entrypoint.sh "$@"
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - plugins.security.ssl.transport.enabled=false
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ports:
      - "${OPENSEARCH_PORT}:9200"
    volumes:
      - ./opensearch_data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -k -u admin:${OPENSEARCH_INITIAL_ADMIN_PASSWORD} --silent --fail http://localhost:9200/_cluster/health || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.17.1
    container_name: linq-rms-os-dashboards
    ports:
     - "${OPENSEARCH_DASHBOARDS_PORT}:5601"
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch-db:${OPENSEARCH_PORT}"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: true
    depends_on:
      opensearch-db:
        condition: service_healthy